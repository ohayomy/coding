1. javac.exe 는 자바 컴파일러. 사람이 작성한 문장을 자바 버츄얼머신, 즉 JVM이 알아들을 수 있는 기계어로 번역한다.
내가만든 자바파일(파일명.java)를 클래스파일(파일명.class)로 변환시킨다.
클래스파일은 사람이 읽을 수 없다.
명령어는 cmd 기준 자바파일이 있는 디렉토리로 이동한 다음,  javac Hello.java이며 원칙적으로는 
javac의 디렉토리도 입력해주어야 하지만 제어판 환경변수에서 javac의 경로를 사전에 입력해두면
별도의 디렉토리 입력 없이 javac만으로 사용가능하다.
나같은 경우 그냥 javac Hello.java만 했더니 파일 안에 주석처리 된 한글을 못읽는 에러가 발생해서
javac Hello.java -encoding UTF8 이렇게 입력했더니 됐다.
따라서 추후에 자바의 기본 인코딩을 utf-8로 바꿔주는 과정이 필요할 것같다.
이처럼 컴파일시 발생한 오류를 컴파일 오류라고 한다.

2. java.exe 는 자바 인터프리터로, 자바 프로그램(클래스파일)을 실행시킨다.
cmd 명령어는 간단히 java Hello 만 쓰면 된다.

3. 클래스는 자바 프로그램의 단위이며, 자바 프로그램은 클래스들로 구성되어있다.
class 클래스이름 {
	문장들이 들어감
}

4. main메서드는 자바프로그램의 시작점이고 이 메서드 없이 실행이 불가능하다.

5. 이클립스는 저장시 자동으로 컴파일을 해서 클래스파일을 별도의 폴더에 보관한다.
윈도우스 show-view에서 navigator를 띄우면 이클립스 내에서도 볼 수 있다.

6. Build 관련메뉴
Project > Build All		workspace의 모든프로젝트를 빌드
Project > Build Project	현재 프로젝트를 빌드
Project > Clean		이전빌드의 정보를 삭제
Project > Build Automatically	내용변경후, 저장시마다 자동 컴파일(이클립스의 장점.)

7. 자바파일은 대소문자를 구별한다. 자바파일 만들때 첫글자는 대문자로 쓴다.

8. 이클립스 단축키
ctrl+shift + L : 단축키 전체목록
ctrl +,- : 코드의 폰트 크기조절
alt + shift + A : 멀티컬럼 편집모드(쉬프트로 여러 행 및 열 지정가능)
ctrl + i : 자동들여쓰기(vscode의 beautify 익스텐션과 동일)
ctrl + spacebar : 자동완성기능
(행이동, 주석등은 vscode와 동일하며, 행삭제인 ctrl+D는 vs코드와 동일하게 행 복사로 임의로 바꿨음)

9. 자동완성 기능 수정은 window에서 preferences > java > editor > templates 에서 바꾼다.







